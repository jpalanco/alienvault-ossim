
  INTRODUCTION
  ------------

The following document describes the Agent Control API.

When sending requests to the control framework, the string is to take the form
of:

control action="request" id="who" parameter1="value1" parameter2="value2"

In this case the "request" value is the action that is being requested
and subsequent parameter/value pairs are provided as required. Non required
parameters should be silently ignored.

The "id" value indicates the id of agent, as specified in its config file, that
this request is being sent to. Ommission of this value will imply "all", which
results in a broadcast to all connected agents.


The message return format will have at least the following form.

control request id="who" errno="X" error="YYY" transaction="ZZZZZ" ...

Where the "requestedaction" is the initial action requested indicating it is
association with the original request. The "errno" value is the error return
code from the action. Zero "0" indicates success and a non-zero indicates a
failure. The "error" value provides a string literal of the actual error
message if appropriate. The "transaction_id" is used for internal message
management within the framework and can be safely ignored.

The final message in the response will be terminated by the "ackend" value and
indicates it is the last message and the client can stop polling for returns.
All other messages that form part of the response are terminated by the "ack"
indicating that messages are still forthcoming.



  GENERAL COMMANDS
  ----------------

Command: command_set

Description: List the commands supported by the Agent Control. Return is likely
to be a multi-message return.

Parameters: Nil.

Returns:
  command     - the name of the command.
  description - short description of the command.

Example:
control action="command_set"


Command: os_info

Description: List basic OS information. On Linux machines majority of
information is sourced from the kernel description string provided by
"uname -a".

Parameters: Nil.

Returns:
  system   - Type of system (eg. Linux)
  hostname - Host name of the system (eg. aegis)
  release  - Kernel version (eg. 2.6.31-20-generic)
  version  - Extra description (eg. #57-Ubuntu SMP Mon Feb 8 09:02:26 UTC 2010)

Example:
control action="os_info"



  CONFIGURATION FILE COMMANDS
  ---------------------------

Command: config_file_backup

Description: Backup an existing configuration file (*.cfg).

Parameters:
  path - The full path to the configuration file of interest

Returns:
  backup_path - full path of the new backup file
  timestamp   - timestamp extension applied to the backup file

Example:
control action="config_file_backup"


config_file_backup_list

Description: Lists all backups of for a specified configuration file (*.cfg)

Parameters:
  path - The full path to the configuration file of interest.

Returns:
  count     - The number of timestamps available.
  timestamp - available timestamp for restore.

Example:
control action="config_file_backup_list"


config_file_backup_restore

Description: Restore a previous backup for the specified configuration file
(*.cfg). If the timestamp parameter is ommited the most recent back up is
assumed. If the type parameter is ommited "overwrite_pop" is assumed.

Parameters:
  path      - The full path to the configuration file of interest.
  timestamp - The timestamp of the backup file to restore.
  type      - "overwrite_clear" will restore the file and delete the backup.
              "overwrite_only" will restore the backup and leave the backup in
              place.

Returns:
Nil.

Example:
control action="config_file_backup_list"


config_file_get

Description: Get the contents of an existing configuration file (*.cfg). Files
that contain multiple lines will be sent via individual control messsages. The
last message will contain the "ackend" terminator.

Parameters:
  path - The full path to the configuration file being read.

Returns:
  length - length of the plain text contained within "line".
  line   - hexified gzip compressed representation of the line contents.

Example:
control action="config_file_get" path="/etc/ossim/agent/plugins/wmi-monitor.cfg"

> control config_file_get transaction="15943" id="aegis" length="7" line="789cb3b65628cfcde4020007a501ee" ack
> control config_file_get transaction="15943" id="aegis" length="17" line="789cb3b65628a92c48b552c8cdcfcb2cc92fe20200322105c5" ack
> control config_file_get transaction="15943" id="aegis" length="19" line="789cb3b65628c8294dcfcc8bcf4cb15230323034e202003ced057b" ack

---8< snip >8 ---

> control config_file_get transaction="15943" id="aegis" length="6" line="789c2bce4cb135e10200077e01bc" ack
> control config_file_get transaction="15943" id="aegis" length="16" line="789c2b4a4d4fad28b055d28849d1d4d352e202002e4f0480" ack
> control config_file_get transaction="15943" id="aegis" length="12" line="789c2b4a2d2ecd29b1ad5631ace502001ede0434" ack
> control config_file_get transaction="15943" id="aegis" errno="0" error="Success." ackend


config_file_set

Description: Get the contents of an existing configuration file (*.cfg).

Parameters:
  path   - The full path to the configuration file being written.
  type   - write  - write a line to the file buffer.
           commit - commit the entire file buffer to the file.
           reset  - reset/clear the entire file buffer.
  length - length of the plain text contained within "line".
  line   - hexified gzip compressed representation of the line contents.

Returns: Nil.

Example:
control action="config_file_set" type
control action="config_file_set" path="/etc/ossim/agent/plugins/wmi-monitor.cfg" type="write" length="7" line="789cb3b65628cfcde4020007a501ee"
control action="config_file_set" path="/etc/ossim/agent/plugins/wmi-monitor.cfg" type="write" length="17" line="789cb3b65628a92c48b552c8cdcfcb2cc92fe20200322105c5" ack
control action="config_file_set" path="/etc/ossim/agent/plugins/wmi-monitor.cfg" type="write" length="19" line="789cb3b65628c8294dcfcc8bcf4cb15230323034e202003ced057b" ack

---8< snip >8 ---

control action="config_file_set" path="/etc/ossim/agent/plugins/wmi-monitor.cfg" type="write" length="6" line="789c2bce4cb135e10200077e01bc" ack
control action="config_file_set" path="/etc/ossim/agent/plugins/wmi-monitor.cfg" type="write" length="16" line="789c2b4a4d4fad28b055d28849d1d4d352e202002e4f0480" ack
control action="config_file_set" path="/etc/ossim/agent/plugins/wmi-monitor.cfg" type="write" length="12" line="789c2b4a2d2ecd29b1ad5631ace502001ede0434" ack
control action="config_file_set" path="/etc/ossim/agent/plugins/wmi-monitor.cfg" type="commit"
