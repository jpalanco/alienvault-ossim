name: Build and Deploy DEB Packages

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-debs:
    runs-on: ubuntu-latest
    container:
      image: debian:stretch
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Build Tools
        run: |
          apt-get update
          apt-get install -y \
            build-essential \
            devscripts \
            debhelper \
            dpkg-dev \
            apt-utils

      - name: Build DEB Packages
        run: |
          set -e
          echo "Searching for directories with a debian folder…"
          # Encuentra todas las carpetas que contienen un subdirectorio "debian"
          for pkg in $(find . -type d -name debian -printf "%h\n" | sort -u); do
            echo "-----------------------------"
            echo "Building package in: $pkg"
            cd "$pkg"
            if [ -f debian/control ]; then
              # Construye el paquete sin firmarlo (-uc -us)
              dpkg-buildpackage -uc -us || echo "⚠️  Build failed in $pkg"
            else
              echo "No debian/control file in $pkg, skipping..."
            fi
            cd - > /dev/null
          done

      - name: Collect DEB Files
        run: |
          mkdir -p output
          echo "Collecting all .deb files into ./output …"
          # Copia todos los archivos .deb
          find . -type f -name "*.deb" -exec cp {} output/ \;
          echo "Files in output:"
          ls -la output

      - name: Upload DEB Files Artifact
        uses: actions/upload-artifact@v3
        with:
          name: deb-files
          path: output

  deploy:
    needs: build-debs
    runs-on: ubuntu-latest
    steps:
      - name: Download DEB Files Artifact
        uses: actions/download-artifact@v3
        with:
          name: deb-files
          path: output

      - name: Create APT Repository Index
        run: |
          cd output
          echo "Generating Packages.gz index…"
          dpkg-scanpackages . /dev/null | gzip -9c > Packages.gz
          ls -la
          cd ..

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./output

