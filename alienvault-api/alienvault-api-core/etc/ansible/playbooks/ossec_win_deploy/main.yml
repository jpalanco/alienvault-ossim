#
#  License:
#
#  Copyright (c) 2013 AlienVault
#  All rights reserved.
#
#  This package is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; version 2 dated June, 1991.
#  You may not use, modify or distribute this program under any other version
#  of the GNU General Public License.
#
#  This package is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this package; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
#  MA  02110-1301  USA
#
#
#  On Debian GNU/Linux systems, the complete text of the GNU General
#  Public License can be found in `/usr/share/common-licenses/GPL-2'.
#
#  Otherwise you can read it here: http://www.gnu.org/licenses/gpl-2.0.txt
#

---
# OSSEC Windows deployment
# Input params:
# auth_file_samba: path to temporary auth file for samba
# agent_config_file: path to temporary agent configuration file
# agent_key_file: path to temporary agent keys file
# auth_str: windows_domain/windows_user
# hashes: LM Hash and NTLM Hash for the password
# agent_name: agent name
# windows_ip: windows ip
# windows_username: windows user
# windows_domain: windows domain
# windows_password: windows password
# target: Host where should be done the deployment
# Sample of usage:
# ansible-playbook -c ssh -vvvv --extra-vars='agent_name=w2012
#                                             windows_domain=
#                                             auth_str=<windows_user>
#                                             hashes=326898b9d33d7eb6c550795a8b1278ce:e591b92ad4e4774e1db7782ffbc1954c
#                                             auth_file_samba=/tmp/tmpgslxEo
#                                             agent_config_file=/tmp/tmpHwmkYh
#                                             target=<sensor_ip>
#                                             windows_ip=<windows_ip>
#                                             agent_key_file=/tmp/tmp93C0El
#                                             windows_username=<windows_user>' /etc/ansible/playbooks/ossec_win_deploy/main.yml
#
#

- name: OSSEC Windows Deployment Playbook
  #Not necessary
  gather_facts: False
  hosts: "{{ target }}"

  vars:
    downloads_dir: /usr/share/ossim/www/downloads/
    ossec_agent_binary_file: ossec-win32-agent.exe
    ossec_agent_config_template: /etc/ossim/agent/ossecagentconfig.cfg
    ossec_agent_ar_config: /etc/ansible/playbooks/ossec_win_deploy/ar.conf
    ossec_server_key_file: /var/ossec/etc/client.keys
    osser_server_manage: /var/ossec/bin/manage_agents
    smb_winexec_config_file: /etc/ossim/agent/smb.conf

  #Task list

  tasks:

    - name: Generate authentication file for samba
      template:
        src: auth_file_template_samba.j2
        dest: "{{ auth_file_samba }}"

    - name: Get Program Files
      action: shell executable=/bin/bash program_files_x86=$(/usr/share/python/alienvault-api-core/bin/wmiexec.py -hashes {{hashes}} {{auth_str}}@{{windows_ip}} 'cmd /c set' | grep "^ProgramFiles(x86)=" | cut -d'=' -f 2-); program_files_x64=$(/usr/share/python/alienvault-api-core/bin/wmiexec.py -hashes {{hashes}} {{auth_str}}@{{windows_ip}} 'cmd /c set' | grep "^ProgramFiles=" | cut -d'=' -f 2-); [[ $program_files_x86 ]] && echo $program_files_x86 || echo $program_files_x64
      register: PROGRAM_FILES

    - name: Delete tmp files on fail
      file:
          path: "{{ auth_file_samba }}"
          state: absent
      when: PROGRAM_FILES.stdout == ''

    - name: Cannot retrieve Program Files location from windows host
      fail: msg='Cannot retrieve Program Files location from {{windows_ip}}'
      when: PROGRAM_FILES.stdout == ''

    - name: Get Program Files directory
      action: shell executable=/bin/bash echo '{{PROGRAM_FILES.stdout}}' | cut -d':' -f 2 | cut -b 2-
      register: PROGRAM_FILES_DIR

    - name: Get Program Files drive
      action: shell executable=/bin/bash echo '{{PROGRAM_FILES.stdout}}' | cut -d':' -f 1
      register: PROGRAM_FILES_DRIVE

    - name: Get agent ID
      action: shell executable=/bin/bash echo 'L'$'\n'$'\n''Q'$'\n' | {{osser_server_manage}} | grep ' {{agent_name}}, IP' | awk '{print $2}' | cut -f 1 -d','
      register: AGENT_ID
      become: yes

    - name: Delete tmp files on fail
      file:
          path: "{{ auth_file_samba }}"
          state: absent
      when: AGENT_ID.stdout == ''

    - name: Cannot get agent ID
      fail: msg='Cannot retrieve the agent ID'
      when: AGENT_ID.stdout == ''

    - name: Send agent installer
      action: command smbclient //{{windows_ip}}/{{PROGRAM_FILES_DRIVE.stdout}}$ --authentication-file={{auth_file_samba}} --configfile={{smb_winexec_config_file}} --command='lcd {{downloads_dir}}; put {{ossec_agent_binary_file}}'

    - name: Stop the ossec agent if it is working.
      action: shell executable=/bin/bash echo $'\n' | /usr/share/python/alienvault-api-core/bin/wmiexec.py -hashes {{hashes}} {{auth_str}}@{{windows_ip}} 'cmd /c cd "{{PROGRAM_FILES_DRIVE.stdout}}:\{{PROGRAM_FILES_DIR.stdout}}\ossec-agent" & net stop OssecSvc > nul 2>&1'
      register: stop_result
      ignore_errors: True

    - name: Kill the manager if it is working. When the manager is working the install process doesn't work
      action: shell executable=/bin/bash echo $'\n' | /usr/share/python/alienvault-api-core/bin/wmiexec.py -hashes {{hashes}} {{auth_str}}@{{windows_ip}} 'cmd /c taskkill /IM win32ui.exe /F > nul 2>&1'
      register: install_result
      ignore_errors: True

    - name: Install agent
      action: command /usr/share/python/alienvault-api-core/bin/wmiexec.py -hashes {{hashes}} {{auth_str}}@{{windows_ip}} 'cmd /c {{PROGRAM_FILES_DRIVE.stdout}}:\{{ossec_agent_binary_file}} /S'
      register: install_result

    - name: Remove agent installer
      action: command smbclient //{{windows_ip}}/{{PROGRAM_FILES_DRIVE.stdout}}$ --authentication-file={{auth_file_samba}} --configfile={{smb_winexec_config_file}} --command='rm {{ossec_agent_binary_file}}'

    - name: Get server inteface
      action: shell executable=/bin/bash ip route get {{windows_ip}}|head -1 |grep -oP 'dev\s(.*?)\s'| sed -e 's/dev //g'
      register: IFACE_SERVER

    - name: Get server interface IP
      action: shell executable=/bin/bash ip addr show {{IFACE_SERVER.stdout}} | sed   -e '/\<inet\>/h; $!d; x' -e 's/.*inet\s\(.*\)\/.*/\1/'
      register: SERVER_IP

    - name: Generate agent configuration
      template:
        src: ossecagentconfig.cfg
        dest: "{{ agent_config_file }}"

    - name: Send agent configuration
      action: command smbclient //{{windows_ip}}/{{PROGRAM_FILES_DRIVE.stdout}}$ --authentication-file={{auth_file_samba}} --configfile={{smb_winexec_config_file}} --command='cd "{{PROGRAM_FILES_DIR.stdout}}\ossec-agent"; put {{agent_config_file}} ossec.conf'

    - name: Send AR configuration
      action: command smbclient //{{windows_ip}}/{{PROGRAM_FILES_DRIVE.stdout}}$ --authentication-file={{auth_file_samba}} --configfile={{smb_winexec_config_file}} --command='cd "{{PROGRAM_FILES_DIR.stdout}}\ossec-agent\shared"; put {{ossec_agent_ar_config}} ar.conf'

    - name: Generate agent keys
      action: shell executable=/bin/bash grep -w {{agent_name}} {{ossec_server_key_file}} > {{agent_key_file}} && chown avapi:alienvault {{agent_key_file}}
      become: yes

    - name: Send agent keys
      action: command smbclient //{{windows_ip}}/{{PROGRAM_FILES_DRIVE.stdout}}$ --authentication-file={{auth_file_samba}} --configfile={{smb_winexec_config_file}} --command='cd "{{PROGRAM_FILES_DIR.stdout}}\ossec-agent"; put {{agent_key_file}} client.keys'

    - name: Stop the agent
      action: shell executable=/bin/bash echo $'\n' | /usr/share/python/alienvault-api-core/bin/wmiexec.py -hashes {{hashes}} {{auth_str}}@{{windows_ip}} 'cmd /c cd "{{PROGRAM_FILES_DRIVE.stdout}}:\{{PROGRAM_FILES_DIR.stdout}}\ossec-agent" & net stop OssecSvc > nul 2>&1'
      register: stop_result
      ignore_errors: True

    - name: Start the agent
      action: shell executable=/bin/bash echo $'\n' | /usr/share/python/alienvault-api-core/bin/wmiexec.py -hashes {{hashes}} {{auth_str}}@{{windows_ip}} 'cmd /c cd "{{PROGRAM_FILES_DRIVE.stdout}}:\{{PROGRAM_FILES_DIR.stdout}}\ossec-agent" & net start OssecSvc > nul 2>&1'

    - name: Set ossim agent plugin configuration
      action: command /usr/share/ossim/scripts/ossec_set_plugin_config.sh
      become: yes

    - name: Delete tmp files when finishing
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ auth_file_samba }}"
        - "{{ agent_config_file }}"
        - "{{ agent_key_file }}"
